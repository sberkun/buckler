/**
 * Test for request_stop() in federated execution with centralized coordination
 * at tag (0,0).
 * 
 * @author Soroush Bateni
 */
target C;

reactor Sender {
    output out:int;
    timer t(0, 1 usec);
    reaction(t) -> out{=
        printf("Sending 42 at (%lld, %u).\n",
                     get_elapsed_logical_time(),
                     get_microstep());
        SET(out, 42);
        
        tag_t zero = (tag_t) { .time = get_start_time(), .microstep = 0u };
        if (compare_tags(get_current_tag(), zero) == 0) {
            // Request stop at (0,0)
            printf("Requesting stop at (%lld, %u).\n",
                     get_elapsed_logical_time(),
                     get_microstep());
        	request_stop();
        }
    =}
    
    reaction(shutdown) {=
        if (get_elapsed_logical_time() != USEC(0) ||
            get_microstep() != 1) {
            fprintf(stderr, "ERROR: Sender failed to stop the federation in time. "
                    "Stopping at (%lld, %u).\n",
                     get_elapsed_logical_time(),
                     get_microstep());
            exit(1);
        }
        printf("SUCCESS: Successfully stopped the federation at (%lld, %u).\n",
                     get_elapsed_logical_time(),
                     get_microstep());
    =}
}

reactor Receiver {
    input in:int;
    reaction(in) {=
        printf("Received %d at (%lld, %u).\n",
                     in->value,
                     get_elapsed_logical_time(),
                     get_microstep());
        tag_t zero = (tag_t) { .time = get_start_time(), .microstep = 0u };
        if (compare_tags(get_current_tag(), zero) == 0) {
            // Request stop at (0,0)
            printf("Requesting stop at (%lld, %u).\n",
                     get_elapsed_logical_time(),
                     get_microstep());
        	request_stop();
        }
    =}
    
    reaction(shutdown) {=
        // Sender should have requested stop earlier than the receiver.
        // Therefore, the shutdown events must occur at (1000, 0) on the
        // receiver.
        if (get_elapsed_logical_time() != USEC(0) ||
            get_microstep() != 1) {
            fprintf(stderr, "ERROR: Receiver failed to stop the federation in time. "
                    "Stopping at (%lld, %u).\n",
                     get_elapsed_logical_time(),
                     get_microstep());
            exit(1);
        }
        printf("SUCCESS: Successfully stopped the federation at (%lld, %u).\n",
                     get_elapsed_logical_time(),
                     get_microstep());
    =}
}

federated reactor {
    sender = new Sender();
    receiver = new Receiver();
    
    sender.out -> receiver.in;
}